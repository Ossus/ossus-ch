/**
 *  Functions for our carousel layout.
 */
 
 var _circleState = {'items': []};
 
 
 function circleViewTo(view, deg, centerPoint, delay) {		// view must already be in target div, absolutely positioned
 	delay = delay ? delay : 0;
 	var now = (new Date()).getTime();
 	
	// calculate current angle
	var x = parseInt(view.css('left')) + view.outerWidth() / 2;
	var y = parseInt(view.css('top')) + view.outerHeight() / 2;
	var a = x - centerPoint.x;
	var b = y - centerPoint.y;
	var alpha = Math.atan2(b, a);
	var radius = Math.ceil(Math.sqrt(a*a + b*b));
	if (Math.round(alpha / 0.017453) == deg) {
		return false;
	}
	
	// init
	view.css('position', 'absolute');			// Fix for Safari 5.1
	var state = {
		'view': view,
		'center': centerPoint,
		'radius': radius,
		'start': { 'rad': alpha,
		'time': now + delay},
		'end': { 'rad': deg2rad(deg),
		'time': now + delay + UI.Controllers.PHA.animDuration},
		'duration': UI.Controllers.PHA.animDuration,
		'interval': null
	};
	var rand = 'circle' + (new Date()).getTime() + Math.round(Math.random() * 100000);
	_circleState.items[rand] = state;
	
	// set interval
	if (!_circleState.interval) {
		_circleState.interval = setInterval(UI.Controllers.PHA._circleView, 20);
	}
	return true;
},

function _circleView() {
	var dict = _circleState;
	if (!dict) {
		return;
	}
	
	var now = (new Date()).getTime();
	var latest = 0;
	for (var rand in _circleState.items) {
		var s = _circleState.items[rand];
		if (s.start.time > now) {
			continue;
		}
		var thisRad = 0;
		latest = Math.max(s.end.time);
		
		// animating
		if (now < s.end.time) {
			var delta = (now - s.start.time) / s.duration;
			var factor = ((delta * delta) * 3.0) - ((delta * delta * delta) * 2.0);
			thisRad = s.start.rad + (factor * (s.end.rad - s.start.rad));
		}
		else {
			thisRad = s.end.rad;
			delete _circleState.items[rand];
		}
		
		// calculate position from angle
		var a = Math.sin(thisRad) * s.radius;
		var b = Math.cos(thisRad) * s.radius;
		var x = s.center.x + b - 20;			// 40 pixels wide
		var y = s.center.y + a - 20;
		
		s.view.css('left', x + 'px').css('top', y + 'px');
	}
	
	// all done
	if (latest < now) {
		clearInterval(_circleState.interval);
		_circleState.interval = null;
		_circleState.items = {};
	}
},

angleForAppIndex: function(i) {
	var startDeg = -70;
	var increment = 40;
	
	return startDeg + (i * increment);
},

coordinatesForAppIndex: function(i) {
	var myDeg = UI.Controllers.PHA.angleForAppIndex(i);
	
	var radius = 72;
	var a = Math.sin(deg2rad(myDeg)) * radius;
	var b = Math.cos(deg2rad(myDeg)) * radius;
	var top = 64 + a - 20;			// 40 pixels wide
	var left = 64 + b - 20;
	
	return {'top': top, 'left': left};
}
